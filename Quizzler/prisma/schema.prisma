// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  clerkId       String   @unique
  role          String   @default("user")
  categoryStats CategoryStat[]
}

model Category{
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  name          String   
  description   String?
  image         String?
  quizzes       Quiz[]
  categoryStats CategoryStat[] // reseve relation to CategoryStat
}

model Quiz {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  title           String
  description     String?
  image           String?
  categoryId      String    @db.ObjectId
  category        Category  @relation(fields: [categoryId], references: [id])
  questions       Question[]
}

model Question{
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  text            String
  quizId          String    @db.ObjectId
  difficulty      String?
  quiz            Quiz      @relation(fields: [quizId], references: [id], onDelete: Cascade)
  options         Option[]
}

model Option{
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  text            String
  isCorrect       Boolean
  questionId      String    @db.ObjectId
  question        Question  @relation(fields: [questionId], references: [id], onDelete: Cascade)
}


model CategoryStat {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  userId        String   @db.ObjectId
  user          User     @relation(fields: [userId], references: [id])
  categoryId    String   @db.ObjectId
  category      Category @relation(fields: [categoryId], references: [id])
  attempts      Int @default(0) // Total attempts in this category
  completed     Int @default(0) // Total completed quizzes in this category
  averageScore  Float? 
  lastAttempt   DateTime? // Last attempt in this category

  @@unique([userId, categoryId])
}